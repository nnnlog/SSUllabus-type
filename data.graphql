type Query {
    subject(
        year: Int!,
        semester: Semester!,

        grade_scale: [GradeScale!],
        grade_rule: [GradeRule!],

        lang: [Language!],

        is_el: Boolean,
        is_capstone: Boolean,
        limited_target: Boolean,

        keyword: [String!],

        code: [String!],
        #        name: [String!],
        #        professor: [String!],
        bunban: [String!],
        open_department: [String!],

        credit: [Float!],
        listen_count: [IntSectionQuery!],
        remain_count: [IntSectionQuery!],

        process: [SubjectProcess!],
        target: [String!],

        majors: [String!],
        multi_majors: [String!],
    ): [Subject!]!

    major_lists(
        year: Int!,
        semester: Semester!,
    ): [SubjectMajor!]!

    multi_major_lists(
        year: Int!,
        semester: Semester!,
    ): [MultiMajor!]!

    credits(
        year: Int!,
        semester: Semester!,
    ): [Float!]!

    lecture_room_timetable(
        year: Int!,
        semester: Semester!,
        place: [String!]!,
    ): [LectureRoomTimeTableGroup!]!

    lecture_rooms(
        year: Int!,
        semester: Semester!
    ): [String!]!
}

input IntSectionQuery {
    min: Int!,
    max: Int!,
}

type Subject {
    year: Int!,
    semester: Semester!,

    grade_scale: GradeScale!,
    grade_rule: GradeRule!,

    lang: Language!,

    is_el: Boolean!,
    is_capstone: Boolean!,
    limited_target: Boolean!,

    code: String!,
    name: String!,
    bunban: String,
    professor: String,
    open_department: String,

    credit: Float!,
    listen_count: Int!,
    remain_count: Int!,

    process: SubjectProcess!,
    target: String,

    syllabus: String,

    majors: [String!]!,
    multi_majors: [String!]!,
    time_place: [SubjectLectureRoomTime!]
}

type SubjectMajor {
    isu_name: String!,
    is_main: Boolean!
}

type LectureRoomTimeTableGroup {
    place: String!,
    value: [LectureRoomTimeTable!]!,
}

type LectureRoomTimeTable {
    code: String!,
    day: String!,
    time_start: String!,
    time_end: String!,
}

type SubjectLectureRoomTime {
    place: String,
    day: String!,
    time_start: String!,
    time_end: String!,
}

type MultiMajor {
    univ: String!,
    department: String!,
    detail_department: String!,
    isu_name: String!,
}

enum Semester {
    FIRST,
    SUMMER,
    SECOND,
    WINTER
}

enum GradeScale {
    SCORE,
    PF,
    UNKNOWN
}

enum GradeRule {
    RELATIVE,
    ABSOLUTE,
    UNKNOWN
}

enum Language {
    KOREAN,
    ENGLISH,
    MIXED_ENGLISH_KOREAN,
    NATION,
    MIXED_NATION_KOREAN,
    UNKNOWN
}

enum SubjectProcess {
    HAKSA,
    SUKSA,
    SUKBAK,
    UNKNOWN
}
